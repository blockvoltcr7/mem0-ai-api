{"uid":"ff2de8898ff45ccc","name":"test_user_memory_isolation","fullName":"tests.integration_mem0.test_peptide_coaching_scenario.TestPeptideCoachingScenario#test_user_memory_isolation","historyId":"514d46a8af0d725625ab4265b0ab3a0c","time":{"start":1748365401059,"stop":1748365401059,"duration":0},"description":"Test that memories are properly isolated between different users.","descriptionHtml":"<p>Test that memories are properly isolated between different users.</p>\n","status":"failed","statusMessage":"Failed: Failed to initialize peptide coach: timed out","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:101: in handle_request\n    raise exc\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:78: in handle_request\n    stream = self._connect(request)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:124: in _connect\n    stream = self._network_backend.connect_tcp(**kwargs)\n.venv/lib/python3.12/site-packages/httpcore/_backends/sync.py:207: in connect_tcp\n    with map_exceptions(exc_map):\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout: timed out\n\n.venv/lib/python3.12/site-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <qdrant_client.http.api_client.ApiClient object at 0x113373b30>\nrequest = <Request('GET', 'https://qdrant-production-3e2f.up.railway.app:6333/collections')>\n\n    def send_inner(self, request: Request) -> Response:\n        try:\n>           response = self._client.send(request)\n\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout: timed out\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:118: ConnectTimeout\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture(scope=\"module\")\n    def peptide_coach():\n        \"\"\"Fixture to create a Mem0-powered peptide coaching assistant.\"\"\"\n        with allure.step(\"Initializing Peptide Coaching Assistant\"):\n            # Validate environment variables\n            if not os.getenv(\"OPENAI_API_KEY\"):\n                pytest.skip(\"OPENAI_API_KEY not found in environment variables\")\n    \n            if not QDRANT_URL:\n                pytest.skip(\"QDRANT_URL not found in environment variables\")\n    \n            # Configure Mem0 with Qdrant\n            protocol = \"https\" if QDRANT_USE_HTTPS else \"http\"\n    \n            config = {\n                \"llm\": {\n                    \"provider\": \"openai\",\n                    \"config\": {\n                        \"model\": \"gpt-4o-mini\",\n                        \"temperature\": 0.7,\n                        \"max_tokens\": 1000\n                    }\n                },\n                \"vector_store\": {\n                    \"provider\": \"qdrant\",\n                    \"config\": {\n                        \"collection_name\": \"mem0_peptide_coaching\",\n                        \"url\": f\"{protocol}://{QDRANT_URL}\",\n                        \"port\": None,  # Critical: prevents :6333 from being appended\n                    }\n                }\n            }\n    \n            allure.attach(\n                str(config),\n                name=\"Mem0 Configuration\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n    \n            try:\n>               memory = Memory.from_config(config)\n\ntests/integration_mem0/test_peptide_coaching_scenario.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/mem0/memory/main.py:161: in from_config\n    return cls(config)\n.venv/lib/python3.12/site-packages/mem0/memory/main.py:123: in __init__\n    self.vector_store = VectorStoreFactory.create(\n.venv/lib/python3.12/site-packages/mem0/utils/factory.py:99: in create\n    return vector_store_instance(**config)\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:71: in __init__\n    self.create_col(embedding_model_dims, on_disk)\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:83: in create_col\n    response = self.list_cols()\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:200: in list_cols\n    return self.client.get_collections()\n.venv/lib/python3.12/site-packages/qdrant_client/qdrant_client.py:2214: in get_collections\n    return self._client.get_collections(**kwargs)\n.venv/lib/python3.12/site-packages/qdrant_client/qdrant_remote.py:2571: in get_collections\n    self.http.collections_api.get_collections().result\n.venv/lib/python3.12/site-packages/qdrant_client/http/api/collections_api.py:330: in get_collections\n    return self._build_for_get_collections()\n.venv/lib/python3.12/site-packages/qdrant_client/http/api/collections_api.py:159: in _build_for_get_collections\n    return self.api_client.request(\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:90: in request\n    return self.send(request, type_)\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:107: in send\n    response = self.middleware(request, self.send_inner)\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:240: in __call__\n    return call_next(request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <qdrant_client.http.api_client.ApiClient object at 0x113373b30>\nrequest = <Request('GET', 'https://qdrant-production-3e2f.up.railway.app:6333/collections')>\n\n    def send_inner(self, request: Request) -> Response:\n        try:\n            response = self._client.send(request)\n        except Exception as e:\n>           raise ResponseHandlingException(e)\nE           qdrant_client.http.exceptions.ResponseHandlingException: timed out\n\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:131: ResponseHandlingException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture(scope=\"module\")\n    def peptide_coach():\n        \"\"\"Fixture to create a Mem0-powered peptide coaching assistant.\"\"\"\n        with allure.step(\"Initializing Peptide Coaching Assistant\"):\n            # Validate environment variables\n            if not os.getenv(\"OPENAI_API_KEY\"):\n                pytest.skip(\"OPENAI_API_KEY not found in environment variables\")\n    \n            if not QDRANT_URL:\n                pytest.skip(\"QDRANT_URL not found in environment variables\")\n    \n            # Configure Mem0 with Qdrant\n            protocol = \"https\" if QDRANT_USE_HTTPS else \"http\"\n    \n            config = {\n                \"llm\": {\n                    \"provider\": \"openai\",\n                    \"config\": {\n                        \"model\": \"gpt-4o-mini\",\n                        \"temperature\": 0.7,\n                        \"max_tokens\": 1000\n                    }\n                },\n                \"vector_store\": {\n                    \"provider\": \"qdrant\",\n                    \"config\": {\n                        \"collection_name\": \"mem0_peptide_coaching\",\n                        \"url\": f\"{protocol}://{QDRANT_URL}\",\n                        \"port\": None,  # Critical: prevents :6333 from being appended\n                    }\n                }\n            }\n    \n            allure.attach(\n                str(config),\n                name=\"Mem0 Configuration\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n    \n            try:\n                memory = Memory.from_config(config)\n                openai_client = OpenAI()\n    \n                return {\n                    \"memory\": memory,\n                    \"openai_client\": openai_client,\n                    \"config\": config\n                }\n            except Exception as e:\n                allure.attach(\n                    str(e),\n                    name=\"Initialization Error\",\n                    attachment_type=allure.attachment_type.TEXT\n                )\n>               pytest.fail(f\"Failed to initialize peptide coach: {str(e)}\")\nE               Failed: Failed to initialize peptide coach: timed out\n\ntests/integration_mem0/test_peptide_coaching_scenario.py:91: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"peptide_coach","time":{"start":1748365390289,"stop":1748365400436,"duration":10147},"status":"failed","statusMessage":"Failed: Failed to initialize peptide coach: timed out\n","statusTrace":"  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/tests/integration_mem0/test_peptide_coaching_scenario.py\", line 91, in peptide_coach\n    pytest.fail(f\"Failed to initialize peptide coach: {str(e)}\")\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Initializing Peptide Coaching Assistant","time":{"start":1748365390289,"stop":1748365400417,"duration":10128},"status":"failed","statusMessage":"Failed: Failed to initialize peptide coach: timed out\n","statusTrace":"  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/tests/integration_mem0/test_peptide_coaching_scenario.py\", line 91, in peptide_coach\n    pytest.fail(f\"Failed to initialize peptide coach: {str(e)}\")\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"fa4ec592492033c0","name":"Mem0 Configuration","source":"fa4ec592492033c0.txt","type":"text/plain","size":273},{"uid":"7b69e409735c526","name":"Initialization Error","source":"7b69e409735c526.txt","type":"text/plain","size":9}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Test that memories are properly isolated between different users.","status":"failed","statusMessage":"Failed: Failed to initialize peptide coach: timed out","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:101: in handle_request\n    raise exc\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:78: in handle_request\n    stream = self._connect(request)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:124: in _connect\n    stream = self._network_backend.connect_tcp(**kwargs)\n.venv/lib/python3.12/site-packages/httpcore/_backends/sync.py:207: in connect_tcp\n    with map_exceptions(exc_map):\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout: timed out\n\n.venv/lib/python3.12/site-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <qdrant_client.http.api_client.ApiClient object at 0x113373b30>\nrequest = <Request('GET', 'https://qdrant-production-3e2f.up.railway.app:6333/collections')>\n\n    def send_inner(self, request: Request) -> Response:\n        try:\n>           response = self._client.send(request)\n\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout: timed out\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:118: ConnectTimeout\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture(scope=\"module\")\n    def peptide_coach():\n        \"\"\"Fixture to create a Mem0-powered peptide coaching assistant.\"\"\"\n        with allure.step(\"Initializing Peptide Coaching Assistant\"):\n            # Validate environment variables\n            if not os.getenv(\"OPENAI_API_KEY\"):\n                pytest.skip(\"OPENAI_API_KEY not found in environment variables\")\n    \n            if not QDRANT_URL:\n                pytest.skip(\"QDRANT_URL not found in environment variables\")\n    \n            # Configure Mem0 with Qdrant\n            protocol = \"https\" if QDRANT_USE_HTTPS else \"http\"\n    \n            config = {\n                \"llm\": {\n                    \"provider\": \"openai\",\n                    \"config\": {\n                        \"model\": \"gpt-4o-mini\",\n                        \"temperature\": 0.7,\n                        \"max_tokens\": 1000\n                    }\n                },\n                \"vector_store\": {\n                    \"provider\": \"qdrant\",\n                    \"config\": {\n                        \"collection_name\": \"mem0_peptide_coaching\",\n                        \"url\": f\"{protocol}://{QDRANT_URL}\",\n                        \"port\": None,  # Critical: prevents :6333 from being appended\n                    }\n                }\n            }\n    \n            allure.attach(\n                str(config),\n                name=\"Mem0 Configuration\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n    \n            try:\n>               memory = Memory.from_config(config)\n\ntests/integration_mem0/test_peptide_coaching_scenario.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/mem0/memory/main.py:161: in from_config\n    return cls(config)\n.venv/lib/python3.12/site-packages/mem0/memory/main.py:123: in __init__\n    self.vector_store = VectorStoreFactory.create(\n.venv/lib/python3.12/site-packages/mem0/utils/factory.py:99: in create\n    return vector_store_instance(**config)\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:71: in __init__\n    self.create_col(embedding_model_dims, on_disk)\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:83: in create_col\n    response = self.list_cols()\n.venv/lib/python3.12/site-packages/mem0/vector_stores/qdrant.py:200: in list_cols\n    return self.client.get_collections()\n.venv/lib/python3.12/site-packages/qdrant_client/qdrant_client.py:2214: in get_collections\n    return self._client.get_collections(**kwargs)\n.venv/lib/python3.12/site-packages/qdrant_client/qdrant_remote.py:2571: in get_collections\n    self.http.collections_api.get_collections().result\n.venv/lib/python3.12/site-packages/qdrant_client/http/api/collections_api.py:330: in get_collections\n    return self._build_for_get_collections()\n.venv/lib/python3.12/site-packages/qdrant_client/http/api/collections_api.py:159: in _build_for_get_collections\n    return self.api_client.request(\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:90: in request\n    return self.send(request, type_)\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:107: in send\n    response = self.middleware(request, self.send_inner)\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:240: in __call__\n    return call_next(request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <qdrant_client.http.api_client.ApiClient object at 0x113373b30>\nrequest = <Request('GET', 'https://qdrant-production-3e2f.up.railway.app:6333/collections')>\n\n    def send_inner(self, request: Request) -> Response:\n        try:\n            response = self._client.send(request)\n        except Exception as e:\n>           raise ResponseHandlingException(e)\nE           qdrant_client.http.exceptions.ResponseHandlingException: timed out\n\n.venv/lib/python3.12/site-packages/qdrant_client/http/api_client.py:131: ResponseHandlingException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture(scope=\"module\")\n    def peptide_coach():\n        \"\"\"Fixture to create a Mem0-powered peptide coaching assistant.\"\"\"\n        with allure.step(\"Initializing Peptide Coaching Assistant\"):\n            # Validate environment variables\n            if not os.getenv(\"OPENAI_API_KEY\"):\n                pytest.skip(\"OPENAI_API_KEY not found in environment variables\")\n    \n            if not QDRANT_URL:\n                pytest.skip(\"QDRANT_URL not found in environment variables\")\n    \n            # Configure Mem0 with Qdrant\n            protocol = \"https\" if QDRANT_USE_HTTPS else \"http\"\n    \n            config = {\n                \"llm\": {\n                    \"provider\": \"openai\",\n                    \"config\": {\n                        \"model\": \"gpt-4o-mini\",\n                        \"temperature\": 0.7,\n                        \"max_tokens\": 1000\n                    }\n                },\n                \"vector_store\": {\n                    \"provider\": \"qdrant\",\n                    \"config\": {\n                        \"collection_name\": \"mem0_peptide_coaching\",\n                        \"url\": f\"{protocol}://{QDRANT_URL}\",\n                        \"port\": None,  # Critical: prevents :6333 from being appended\n                    }\n                }\n            }\n    \n            allure.attach(\n                str(config),\n                name=\"Mem0 Configuration\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n    \n            try:\n                memory = Memory.from_config(config)\n                openai_client = OpenAI()\n    \n                return {\n                    \"memory\": memory,\n                    \"openai_client\": openai_client,\n                    \"config\": config\n                }\n            except Exception as e:\n                allure.attach(\n                    str(e),\n                    name=\"Initialization Error\",\n                    attachment_type=allure.attachment_type.TEXT\n                )\n>               pytest.fail(f\"Failed to initialize peptide coach: {str(e)}\")\nE               Failed: Failed to initialize peptide coach: timed out\n\ntests/integration_mem0/test_peptide_coaching_scenario.py:91: Failed","steps":[],"attachments":[{"uid":"7e9c99c66d48c782","name":"Exception","source":"7e9c99c66d48c782.txt","type":"text/plain","size":45}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"story","value":"User Isolation"},{"name":"epic","value":"Mem0 Real-World Applications"},{"name":"feature","value":"Peptide Health Coaching"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests.integration_mem0"},{"name":"suite","value":"test_peptide_coaching_scenario"},{"name":"subSuite","value":"TestPeptideCoachingScenario"},{"name":"host","value":"samis-MacBook-Pro.local"},{"name":"thread","value":"26117-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration_mem0.test_peptide_coaching_scenario"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["api"]},"source":"ff2de8898ff45ccc.json","parameterValues":[]}