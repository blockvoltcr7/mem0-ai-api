{"uid":"930ba19862f44087","name":"test_health_coach_config","fullName":"tests.test_streamlit_health_coach.TestMemorySystemIntegration#test_health_coach_config","historyId":"1d9d27889720a70002d8b21153e649de","time":{"start":1748372584773,"stop":1748372584775,"duration":2},"description":"Test HealthCoachConfig settings validation.","descriptionHtml":"<p>Test HealthCoachConfig settings validation.</p>\n","status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 4 validation errors for HealthCoachConfig\nqdrant_port\n  Extra inputs are not permitted [type=extra_forbidden, input_value='6333', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nqdrant_collection_name\n  Extra inputs are not permitted [type=extra_forbidden, input_value='mem0_production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nenvironment\n  Extra inputs are not permitted [type=extra_forbidden, input_value='production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nlog_level\n  Extra inputs are not permitted [type=extra_forbidden, input_value='INFO', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden","statusTrace":"self = <test_streamlit_health_coach.TestMemorySystemIntegration object at 0x119a0b350>\n\n    @allure.story(\"Configuration Validation\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.api\n    def test_health_coach_config(self):\n        \"\"\"Test HealthCoachConfig settings validation.\"\"\"\n        with allure.step(\"Import configuration model\"):\n            from app import HealthCoachConfig\n    \n        with allure.step(\"Validate required environment variables\"):\n            required_vars = [\"OPENAI_API_KEY\", \"QDRANT_URL\"]\n            missing_vars = []\n    \n            for var in required_vars:\n                if not os.getenv(var):\n                    missing_vars.append(var)\n    \n            if missing_vars:\n                pytest.skip(f\"Missing required environment variables: {', '.join(missing_vars)}\")\n    \n        with allure.step(\"Create configuration instance\"):\n>           config = HealthCoachConfig()\n\ntests/test_streamlit_health_coach.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n__pydantic_self__ = HealthCoachConfig(), _case_sensitive = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_nested_delimiter = None, _secrets_dir = None\nvalues = {}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_nested_delimiter: str | None = None,\n        _secrets_dir: str | Path | None = None,\n        **values: Any,\n    ) -> None:\n        # Uses something other than `self` the first arg to allow \"self\" as a settable attribute\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for HealthCoachConfig\nE       qdrant_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='6333', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       qdrant_collection_name\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='mem0_production', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       environment\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='production', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       log_level\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='INFO', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.12/site-packages/pydantic_settings/main.py:71: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1748372583025,"stop":1748372583025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test HealthCoachConfig settings validation.","status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 4 validation errors for HealthCoachConfig\nqdrant_port\n  Extra inputs are not permitted [type=extra_forbidden, input_value='6333', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nqdrant_collection_name\n  Extra inputs are not permitted [type=extra_forbidden, input_value='mem0_production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nenvironment\n  Extra inputs are not permitted [type=extra_forbidden, input_value='production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nlog_level\n  Extra inputs are not permitted [type=extra_forbidden, input_value='INFO', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden","statusTrace":"self = <test_streamlit_health_coach.TestMemorySystemIntegration object at 0x119a0b350>\n\n    @allure.story(\"Configuration Validation\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.api\n    def test_health_coach_config(self):\n        \"\"\"Test HealthCoachConfig settings validation.\"\"\"\n        with allure.step(\"Import configuration model\"):\n            from app import HealthCoachConfig\n    \n        with allure.step(\"Validate required environment variables\"):\n            required_vars = [\"OPENAI_API_KEY\", \"QDRANT_URL\"]\n            missing_vars = []\n    \n            for var in required_vars:\n                if not os.getenv(var):\n                    missing_vars.append(var)\n    \n            if missing_vars:\n                pytest.skip(f\"Missing required environment variables: {', '.join(missing_vars)}\")\n    \n        with allure.step(\"Create configuration instance\"):\n>           config = HealthCoachConfig()\n\ntests/test_streamlit_health_coach.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n__pydantic_self__ = HealthCoachConfig(), _case_sensitive = None, _env_prefix = None\n_env_file = PosixPath('.'), _env_file_encoding = None, _env_nested_delimiter = None, _secrets_dir = None\nvalues = {}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_nested_delimiter: str | None = None,\n        _secrets_dir: str | Path | None = None,\n        **values: Any,\n    ) -> None:\n        # Uses something other than `self` the first arg to allow \"self\" as a settable attribute\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for HealthCoachConfig\nE       qdrant_port\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='6333', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       qdrant_collection_name\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='mem0_production', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       environment\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='production', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nE       log_level\nE         Extra inputs are not permitted [type=extra_forbidden, input_value='INFO', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n\n.venv/lib/python3.12/site-packages/pydantic_settings/main.py:71: ValidationError","steps":[{"name":"Import configuration model","time":{"start":1748372584773,"stop":1748372584773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Validate required environment variables","time":{"start":1748372584773,"stop":1748372584773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Create configuration instance","time":{"start":1748372584773,"stop":1748372584774,"duration":1},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 4 validation errors for HealthCoachConfig\nqdrant_port\n  Extra inputs are not permitted [type=extra_forbidden, input_value='6333', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nqdrant_collection_name\n  Extra inputs are not permitted [type=extra_forbidden, input_value='mem0_production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nenvironment\n  Extra inputs are not permitted [type=extra_forbidden, input_value='production', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\nlog_level\n  Extra inputs are not permitted [type=extra_forbidden, input_value='INFO', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/extra_forbidden\n","statusTrace":"  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/tests/test_streamlit_health_coach.py\", line 244, in test_health_coach_config\n    config = HealthCoachConfig()\n             ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pydantic_settings/main.py\", line 71, in __init__\n    super().__init__(\n  File \"/Users/samisabir-idrissi/code/ssiautomationsapps/mem01-ai-tutor/.venv/lib/python3.12/site-packages/pydantic/main.py\", line 253, in __init__\n    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1fe59a490f9b8545","name":"Exception","source":"1fe59a490f9b8545.txt","type":"text/plain","size":823}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Streamlit Health Coach Application"},{"name":"story","value":"Configuration Validation"},{"name":"feature","value":"Memory System Integration"},{"name":"severity","value":"normal"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_streamlit_health_coach"},{"name":"subSuite","value":"TestMemorySystemIntegration"},{"name":"host","value":"samis-MacBook-Pro.local"},{"name":"thread","value":"59002-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_streamlit_health_coach"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["api"]},"source":"930ba19862f44087.json","parameterValues":[]}